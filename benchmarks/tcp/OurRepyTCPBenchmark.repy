"""
<Program Name>
  OurRepyTCPBenchmark.repy

<Started>
  February 15, 2009

<Author>
  Michael Moshofsky

<Purpose>
  Sends a specific amount of bytes with a specific chunk size and records the
  time that it required to complete.

  First argument tells program to be a server or client:
    Server: Only local port is needed in addition.
    Client: localPor, DestinationIP, DestinationPort, TotalBytes, and ChunkSize are needed.
  
  Arguments required: (-s or -c) LocalPort [DestinationIP DestinationPort TotalBytes ChunkSize]

"""


include tcp.repy




def serverListen(myport):
  server = Connection()
  server.bind(getmyip(), myport)
  server.listen()
  tcup, addr = server.accept()

  for i in range(0,100):
    tcup.recv(1000)
    sleep(1)

if callfunc == 'initialize':
  serverOrClient = callargs[0]
  myport = int(callargs[1])
  if (serverOrClient == "-s"):
    serverListen(myport)
  else:

    destip = callargs[2]
    destport = int(callargs[3])
    totalBytes = int(callargs[4])
    chunkSize = int(callargs[5])
    totalChunks = totalBytes/chunkSize
    chunk = ""
    characterNum = 0
    packetNum = 0

    # Creating a chunk
    while (characterNum < chunkSize):
      chunk += "a"
      characterNum += 1

    socket = Connection()
    socket.bind(getmyip(), myport)
    socket.connect(getmyip(), destport)
    startTime = getruntime()

    while (packetNum < totalChunks):
      socket.send(chunk)
      packetNum += 1

    endTime = getruntime()

    socket.disconnect()


    print "\n\n******* Statistics for TCUP *******"
    print "Connected to " + str(destip)
    print "Sent " + str(totalChunks) + " packets, which had a size of " + str(chunkSize) + " bytes." 
    print "Total runtime: " + str((endTime - startTime)) + " seconds."
    print "At a Rate of: " + str(totalBytes *1.0/(endTime - startTime * 1.0)) + " B/S.\n\n"

    exitall()
