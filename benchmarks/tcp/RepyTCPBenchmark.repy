"""
<Program Name>
  RepyTCPBenchmark.repy

<Started>
  February 15, 2009

<Author>
  Michael Moshofsky

<Purpose>
  Sends a specific amount of bytes with a specific chunk size and records the
  time that it required to complete.
"""

TOTAL_BYTES = 10000000       
CHUNK_SIZE = 100000   
TOTAL_CHUNKS = (TOTAL_BYTES/CHUNK_SIZE) * 1.0 # 100 packets
CHUNK = CHUNK_SIZE * "a" # all the letter 'a'

IP = getmyip()
PEER = 'attu.cs.washington.edu'
S_PORT = 12345
C_PORT = 12346

def usage():
  print "Usage: python repy.py restrictions.file RepyTCPBenchmark.out (-s or -c)"


def serverListen():
  server = waitforconn(IP, S_PORT, RecvAndDoNothing)

def RecvAndDoNothing(remoteip, remoteport, socket, thiscommhandle, listencommhandle):
  startTime = getruntime()
  bytes_rcvd = 0
  while bytes_rcvd < TOTAL_BYTES:
    data = socket.recv(TOTAL_BYTES)
    bytes_rcvd += len(data)
    sleep(1)
  endTime = getruntime()

  runTime = (endTime - startTime) * 1.0

  print "\n\n******* Statistics for Repy TCP *******"
  print "Sent " + str(TOTAL_CHUNKS) + " packets, which had a size of " + str(CHUNK_SIZE) + " bytes." 
  print "Total runtime: " + str(runTime) + " seconds."
  print "At a Rate of: " + str(TOTAL_BYTES * 1.0/runTime) + " B/S.\n\n"

  socket.close()

def clientSend():
    rsock = openconn(IP, S_PORT) #, IP, C_PORT)

    packetNum = 0
    while (packetNum < TOTAL_CHUNKS):
      rsock.send(CHUNK)
      packetNum += 1

    rsock.close()

def main():
  serverOrClient = callargs[0]
  if serverOrClient == "-s":
    serverListen()
  elif serverOrClient == "-c":
    clientSend()
  else:
    usage()

if callfunc == 'initialize':
  main()
#  exitall()
