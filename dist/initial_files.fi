# Instructions for the clean_folder.py program to clean up the folder
# created by preparetest
# A file on a line starting with 'req' will be required
# in the folder or an error message will print.
# If 'req' is followed by a comma-separated series of filenames,
# at least one of those files with be required.
# A file on a line starting with 'del' will be deleted.
# You may use wildcards: * for any number of characters, 
# ? for exactly one

del *.pyc
del *.mix
del *.publickey
del *.privatekey
del foo.py
del foowrite.py
del generatekeys.py
del newvessel.resources
del softwareupdater.logfile
del key_daemon.repy
del key_daemon_parser.repy
del nm_remote_api.py
del rhizoma.py

del private_wrapper.repy
del private_encasementlib.repy
del dnscommon.repy
del struct.repy
del advertise_test_routine.repy
del private_hideprivate_layer.repy

req advertise.repy
req AdvertiseObjects.repy
req argparse.repy
req base64.repy
req benchmark_resources.py
req binascii.repy
req bundle.repy
req bundler.py
req centralizedadvertise.repy
req centralizedadvertise_v2.repy
req checkpythonversion.py
req command_callbacks.py
req create_installer_state.py
req createnodekeys.py
req cv.repy
req daemon.py
req darwin_api.py
req deserialize.repy
req domainnameinfo.repy
req DORadvertise.repy
req dylink.repy
req emulcomm.py
req emulfile.py
req emulmisc.py
req emultimer.py
req fakelinecache.py
req fastnmclient.py
req fastsigneddata.py
req freebsd_api.py
req freebsd_kinfo.py
req geoip_client.repy
req getvesselresources.repy
req harshexit.py
req httpretrieve.repy
req httpserver.repy
req idhelper.py
req linux_api.py
req Linux_resources.py
req listops.repy
req loggingrepy.py
req loggingrepy_core.py
req Mac_BSD_resources.py
req math.repy
req md5py.repy
req measure_random.py
req measuredisk.py
req misc.py
req modules
req Multiplexer.repy
req namespace.py
req nanny.py
req nanny_resource_limits.py
req NAT_advertisement.repy
req NATLayer_rpc.repy
req nix_common_api.py
req nmadvertise.py
req nmAPI.py
req nmclient.repy
req nmconnectionmanager.py
req nminit.py
req nmmain.py
req nmrequesthandler.py
req nmresourcemath.py
req nmrestrictionsprocessor.py
req nmstatusinterface.py
req nmstatusmonitor.py
req nmthreadingerror.py
req nonportable.py
req ntp_time.repy
req openDHTadvertise.repy
req parallelize.repy
req persist.py
req portable_popen.py
req priority_queue.repy
req pycryptorsa.repy
req pyDes.repy
req pyreadline
req random.repy
req readline.so.mac
req readline_windows.py
req repy.py
req repy_constants.py
req repyhelper.py
req repyportability.py
req repypp.py
req repyunit.repy
req restrictions.py
req rsa.repy
req runonce.py
req safe.py
req safe_check.py
req safe_eval.repy
req safety_exceptions.py
req seash.py
req seash_dictionary.py
req seash_exceptions.py
req seash_global_variables.py
req seash_helper.py
req seash_modules.py
req seattleinstaller.py
req seattleuninstaller.py
req semaphore.repy
req serialize.repy
req servicelogger.py
req servicelookup.repy
req session.repy
req sha.repy
req signeddata.repy
req sockettimeout.repy
req softwareupdater.py
req sshkey.repy
req sshkey_paramiko.repy
req statusstorage.py
req stop_all_seattle_processes.py
req strace.py
req tab_completer.py
req tcp_time.repy
req textops.py
req time.repy
req time_interface.repy
req timeout_xmlrpclib.py
req tracebackrepy.py
req udpcentralizedadvertise.repy
req uniqueid.repy
req update_crontab_entry.py
req urllib.repy
req urlparse.repy
req vessel.restrictions
req virtual_namespace.py
req win_cpu_nanny.py
req Win_WinCE_resources.py
req windows_api.py
req writemetainfo.py
req xmlparse.repy
req xmlrpc_client.repy
req xmlrpc_common.repy
req xmlrpc_server.repy