"""
<Program Name>
  genidb.py

<Started>
  November, 2008

<Author>
  ivan@cs.washington.edu
  Ivan Beschastnikh

<Purpose>
  Checks for expired vessels and performs a changeusers on them

<Usage>
  Preprocessing this mix file into a python file using e.g.:
  $ python repypp.py expire_vessels.mix expire_vessels.py
  
  And then run it from the command line without any args:
  $ python expire_vessels.py
"""

import sys

from repyportability import *
include nmclient.repy

from django.db import transaction

import changeusers
# db api
import genidb
# circular logging to a file
import logging


def main():
    """
    <Purpose>
        Main loop of the expiration script. Checks for expired vessels
        in the database, and performs a changeusers on them.

    <Arguments>
        None.

    <Exceptions>
        None.

    <Side Effects>
        Vessels that are expired will have their users set to "".

    <Returns>
        Never returns (daemon).
    """
    # loop forever
    while True:
    	# grab all expired vessels from the database
        vmaps = genidb.get_expired_vesselmaps()
        for vmap in vmaps:
            nmip = vmap.vessel_port.vessel.donation.ip
            nmport = vmap.vessel_port.vessel.donation.port
            vesselname = vmap.vessel_port.vessel.name
            nodepubkey = vmap.vessel_port.vessel.donation.owner_pubkey
            nodeprivkey = vmap.vessel_port.vessel.donation.owner_privkey
	    # perform change users
            success,msg = changeusers.changeusers([""], nmip, nmport, vesselname, nodepubkey, nodeprivkey)

	    # log the result of the changeusers
            if not success:
	        print str(time.ctime()) + " Failed to expire vessel " + str(vesselname) + " on node " + str(nmip) + " with expiration stamp: " + str(vmap.expiration) + "\n\tmsg generated: " + str(msg)
	    else:
	        print str(time.ctime()) + " Expired vessel " + str(vesselname) + " on node " + str(nmip) + " with expiration stamp: " + str(vmap.expiration)
		# delete vmap record from the database
		vmap.delete()

        # this is an essential hack to make get_expired_vesselmaps() not use internal models caching:
	# http://www.mail-archive.com/django-users@googlegroups.com/msg14826.html
	try:
            transaction.commit()
        except transaction.TransactionManagementError:
            pass
          
        sleep(60)
	print time.ctime(), "."

	
if __name__ == '__main__':
  logfn = "log.expire_vessels.old"
  # set up the circular logger (at least 50 MB buffer)
  loggerfo = logging.circular_logger(logfn, 50*1024*1024)

  # redirect standard out / error to the circular log buffer
  sys.stdout = loggerfo
  sys.stderr = loggerfo
  print "logging output to " + str(logfn)
  main()
