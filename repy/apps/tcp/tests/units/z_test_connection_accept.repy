"""
<Program Name>
  z_test_connection_accept.repy

<Started>
  February 9, 2009

<Author>
  Richard Jordan

<Purpose>
  To test that Connection.accept() function works.

  Passes quietly
"""
include tcp.repy
include dummy_state_machine.repy

if callfunc == "initialize":
  IP = getmyip()
  PORT = 12345

def test_accept():
  conn = Connection()
  conn.localip = IP
  conn.localport = PORT
  conn.requestip = IP
  conn.requestport = PORT
  conn.conn = True
  conn.accept() 
  # should put request address into remote addr
  # and zero request
  assert conn.localip == IP
  assert conn.localport == PORT
  assert conn.remoteip == IP
  assert conn.remoteport == PORT
  assert not conn.requestip
  assert not conn.requestport
  assert conn.conn == True
  
def test_accept_not_bound():
  conn = Connection()
  try:
    conn.accept()
  except NotBoundError:
    pass
  else:
    raise Exception("should raise not bound error")

def test_accept_not_connected():
  conn = Connection()
  conn.localip = IP
  conn.localport = PORT
  try:
    conn.accept()
  except NotConnectedError:
    pass
  else:
    raise Exception("should raise not connected")

def test_accept_not_requested():
  conn = Connection()
  conn.localip = IP
  conn.localport = PORT
  conn.conn = True
  try:
    conn.accept()
  except NotRequestedError:
    pass
  else:
    raise Exception("should raise not requested")

def test_accept_already_connected():
  conn = Connection()
  conn.localip = IP
  conn.localport = PORT
  # bound
  conn.remoteip = IP
  conn.remoteport = PORT
  conn.conn = True
  # connected
  try:
    conn.accept()
  except AlreadyConnectedError:
    pass
  else:
    raise Exception("should raise already connected")



####################
# Test Helper Functions
####################

def main():
  # setup
  
  # Run tests
  test_accept() 
  test_accept_not_bound()
  test_accept_not_connected()
  test_accept_not_requested()
  test_accept_already_connected()

  # teardown
  exitall()

if callfunc == 'initialize':
  main()
